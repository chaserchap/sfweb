# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-03-28 00:42
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbilitiesByCR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cr', models.CharField(choices=[('third', '1/3'), ('half', '1/2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25')], max_length=3)),
                ('ability_source', models.CharField(choices=[('URC', 'Universal Creature Rules'), ('FTS', 'Feats'), ('FRE', 'Free'), ('ADJ', 'Adjustment')], max_length=3)),
                ('ability_count', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Array',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('C', 'Combatant'), ('E', 'Expert'), ('S', 'Spellcaster')], max_length=1)),
                ('cr', models.CharField(choices=[('third', '1/3'), ('half', '1/2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25')], max_length=3)),
                ('eac', models.IntegerField()),
                ('kac', models.IntegerField()),
                ('fort', models.IntegerField()),
                ('ref', models.IntegerField()),
                ('will', models.IntegerField()),
                ('hp', models.IntegerField()),
                ('ability_dc', models.IntegerField()),
                ('spell_dc_base', models.IntegerField()),
                ('ability_score_modifiers', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(re.compile('^(-)?\\d+(?:\\,(-)?\\d+)*\\Z'), code='invalid', message=None)])),
                ('special_abilities_count', models.IntegerField()),
                ('master_skills_modifier', models.IntegerField()),
                ('good_skills_modifier', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ClassGraft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_title', models.CharField(max_length=12)),
                ('class_description', models.TextField()),
                ('special_rules', models.TextField()),
                ('adjustments', models.TextField()),
                ('ability_score_modifiers', models.TextField()),
                ('gear', models.TextField()),
                ('abilities_by_cr', models.ManyToManyField(to='creatureCreator.AbilitiesByCR')),
                ('required_array', models.ManyToManyField(to='creatureCreator.Array')),
            ],
        ),
        migrations.CreateModel(
            name='Creature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('array', models.ManyToManyField(to='creatureCreator.Array')),
                ('creature_class', models.ManyToManyField(to='creatureCreator.ClassGraft')),
            ],
        ),
        migrations.CreateModel(
            name='CreatureSubtypeGraft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creature_type', models.CharField(max_length=20)),
                ('creature_description', models.TextField()),
                ('traits', models.TextField()),
                ('adjustments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='CreatureTypeGraft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creature_type', models.CharField(max_length=20)),
                ('creature_description', models.TextField()),
                ('traits', models.TextField()),
                ('adjustments', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_title', models.CharField(max_length=20)),
                ('skill_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SpecialAbilities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('source', models.CharField(choices=[('URC', 'Universal Creature Rules'), ('FTS', 'Feats'), ('FRE', 'Free'), ('ADJ', 'Adjustment')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Spells',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('school', models.CharField(max_length=50)),
                ('casting_time', models.CharField(max_length=20)),
                ('spell_range', models.CharField(max_length=50)),
                ('effect', models.TextField()),
                ('duration', models.TextField()),
                ('saving_throw', models.CharField(choices=[('FORT', 'Fortitude'), ('REF', 'Reflex'), ('WILL', 'Will')], max_length=4)),
                ('spell_resistance', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_cr', models.CharField(choices=[('third', '1/3'), ('half', '1/2'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10', '10'), ('11', '11'), ('12', '12'), ('13', '13'), ('14', '14'), ('15', '15'), ('16', '16'), ('17', '17'), ('18', '18'), ('19', '19'), ('20', '20'), ('21', '21'), ('22', '22'), ('23', '23'), ('24', '24'), ('25', '25')], max_length=3)),
                ('alignment', models.CharField(choices=[('CE', 'Chaotic Evil'), ('CN', 'Chaotic Neutral'), ('CG', 'Chaotic Good'), ('NE', 'Neutral Evil'), ('TN', 'True Neutral'), ('NG', 'Neutral Good'), ('LE', 'Lawful Evil'), ('LN', 'Lawful Neutral'), ('LG', 'Lawful Good')], max_length=2)),
                ('traits', models.TextField()),
                ('grafts', models.ManyToManyField(to='creatureCreator.CreatureSubtypeGraft')),
            ],
        ),
        migrations.AddField(
            model_name='creature',
            name='creature_subtype',
            field=models.ManyToManyField(to='creatureCreator.CreatureSubtypeGraft'),
        ),
        migrations.AddField(
            model_name='creature',
            name='creature_template',
            field=models.ManyToManyField(to='creatureCreator.Template'),
        ),
        migrations.AddField(
            model_name='creature',
            name='creature_type',
            field=models.ManyToManyField(to='creatureCreator.CreatureTypeGraft'),
        ),
        migrations.AddField(
            model_name='creature',
            name='skills',
            field=models.ManyToManyField(to='creatureCreator.Skills'),
        ),
        migrations.AddField(
            model_name='creature',
            name='special_abilities',
            field=models.ManyToManyField(to='creatureCreator.SpecialAbilities'),
        ),
        migrations.AddField(
            model_name='creature',
            name='spells',
            field=models.ManyToManyField(to='creatureCreator.Spells'),
        ),
        migrations.AddField(
            model_name='classgraft',
            name='skills',
            field=models.ManyToManyField(to='creatureCreator.Skills'),
        ),
    ]
